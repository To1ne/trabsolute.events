// borrowed from https://github.com/adamstac/animate.sass
//               https://gist.github.com/Integralist/3931680



// Declariation mixin to make it easy to write a declaration with or without a prefix
@mixin declaration($property, $value, $prefix: none) {
  $prefix: unquote($prefix);
  @if $prefix == none {
    #{$property}: $value;
  }
  @else {
    #{-$prefix}-#{$property}: $value;
  }
}

// This mixin provides basic support for CSS3 properties and
// their corresponding experimental CSS2 properties when
// the implementations are identical except for the property
// prefix.
@mixin experimental($property, $value,
  $moz : $experimental-support-for-mozilla,
  $webkit : $experimental-support-for-webkit,
  $o : $experimental-support-for-opera,
  $ms : $experimental-support-for-microsoft,
  $khtml : $experimental-support-for-khtml,
  $official : true
) {
  @if $webkit and $experimental-support-for-webkit { -webkit-#{$property} : $value; }
  @if $khtml and $experimental-support-for-khtml { -khtml-#{$property} : $value; }
  @if $moz and $experimental-support-for-mozilla { -moz-#{$property} : $value; }
  @if $ms and $experimental-support-for-microsoft { -ms-#{$property} : $value; }
  @if $o and $experimental-support-for-opera { -o-#{$property} : $value; }
  @if $official { #{$property} : $value; }
}

// transform - https://developer.mozilla.org/en/CSS/transform
// none | <transform-function>
@mixin transform($value: none, $prefix: false) {
  @if $prefix {
    @include declaration(transform, $value, $prefix);
  }
  @else {
    @include experimental(transform, $value);
  }
}

@mixin animation($value, $prefix: false) {
  @if $prefix {
    @include declaration(animation, $value, $prefix);
  }
  @else {
    @include experimental(animation, $value);
  }
}
